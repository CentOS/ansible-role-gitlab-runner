# Defaults tasks for role gitlab-runner

- name: Importing specific distro variables
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_distribution }}.yml"
  tags:
    - vars
    - always

- name: Importing Gitlab RPM gpg key
  copy:
    src: RPM-GPG-KEY-Gitlab
    dest: /etc/pki/rpm-gpg/RPM-GPG-KEY-Gitlab

- name: Distributing .repo file 
  template:
    src: gitlab-runner.repo.j2
    dest: /etc/yum.repos.d/gitlab-runner.repo
  tags:
    - repo

- name: Installing latest gitlab runner pkg
  yum:
    name: gitlab-runner
    state: latest

- name: Templatize systemd unit file
  template:
    src: gitlab-runner.service.j2
    dest: /etc/systemd/system/gitlab-runner.service
  register: systemd_unit
  notify: restart_gitlab_runner

- name: Reloading systemd if needed
  systemd: 
    daemon_reload: True
  when: systemd_unit is changed

- block:
    - import_role:
        name: podman-host
      vars:
        - podman_rootless_users:
          - "{{ gitlab_runner_user }}"
        - podman_rootless: True  

    - name: Ensuring that podman.socket is started for users
      systemd: 
        scope: user
        enabled: True
        name: podman.socket
        state: started
      become_user: "{{ gitlab_runner_user }}"
    
    - name: Ensuring podman cache clean-up on regular basis
      cron:
        name: podman images clean-up
        job: "/usr/bin/podman system prune -a --force >/dev/null 2>&1"
        hour: "1"
        minute: "5"
      become_user: "{{ gitlab_runner_user }}"
      tags:
        - cron
  when: gitlab_runner_podman_host

- name: Retrieving gitlab runner user id
  shell: "id -u {{ gitlab_runner_user }}"
  register: uid
  tags:
    - always

- block:
    - name: Ensuring gitlab runner user had subuid/subgids
      lineinfile:
        path: "{{ item }}"
        regexp: "^{{ gitlab_runner_user }}"
        line: "{{ gitlab_runner_user }}:10000:65536"
      with_items:
        - /etc/subuid
        - /etc/subgid
      register: podman_subuid

    - name: Running podman system migrate if needed
      command: 
        cmd: "podman system migrate"
      become_user: "{{ gitlab_runner_user }}"
      when: podman_subuid is changed
  when:
    - gitlab_runner_podman_host
    - uid.stdout|int < 1000
  tags:
    - rootless

- name: Registering podman runners if needed
  shell:
    cmd: "gitlab-runner register
          --non-interactive
          --name {{ item.name }}
          --url {{ item.url }}
          --executor docker
          --docker-image '{{ item.docker_image }}'
          --docker-host 'unix:///run/user/{{ uid.stdout }}/podman/podman.sock'
          --docker-privileged
          --registration-token {{ item.registration_token }}
          {% if item.tag_list is defined %}--tag-list '{{ item.tag_list }}'{% endif %}
          && touch /etc/gitlab-runner/{{ item.name }}.registered
         "
    creates: "/etc/gitlab-runner/{{ item.name }}.registered"
  with_items: "{{ gitlab_runners_podman_list }}"
  loop_control:
    label: "{{ item.name }}"
  tags:
    - runners

- name: Registering shell runners if needed
  shell:
    cmd: "gitlab-runner register
          --non-interactive
          --name {{ item.name }}
          --url {{ item.url }}
          --executor shell
          --shell {{ item.shell }}
          --registration-token {{ item.registration_token }}
          {% if item.tag_list is defined %}--tag-list '{{ item.tag_list }}'{% endif %}
          && touch /etc/gitlab-runner/{{ item.name }}.registered
         "
    creates: "/etc/gitlab-runner/{{ item.name }}.registered"
  with_items: "{{ gitlab_runners_shell_list }}"
  loop_control:
    label: "{{ item.name }}"
  tags:
    - runners


    
